/********************
 * LMMS style sheet *
 ********************/

/* === SECTION TITLE ===
 * Description
 */

/* === DEVELOPMENT NOTES ===
 * 1. Treat the user like an idiot
 * 2. Keep the lines under 100 characters, if possible
 */

/* === FOREWORD ===
 * Any images should not have their filenames changed.
 * Keep the image resolution the same.
 * Search key terms (scrollbar, explorer, mixer, etc).
 */

/* Text color of most foreground text items */
QLabel, QTreeWidget, QListWidget, QGroupBox, QMenuBar, QCheckBox {
	color: #d1d8e4;
}

/* === THE EXPLORER ===
 * TODO: Are there any more tree views?
 * You can change the background color of the explorer with the background-color rule.
 */
QTreeView {

	/* No outline around names of items in the explorer */
	outline: none;

	/* ??? */
	alternate-background-color: #111314;

}

/* === EXPLORER ITEMS ===
 * An item in the explorer can be a folder,
 * as well as a preset, sample or any other type of file.
 */
QTreeWidget::item {
	padding: 1px;
}

/* === EXPLORER BRANCHES ===
 * A branch is just a folder!
 * These two rulesets affect hovering and selecting folders.
 */

QTreeWidget::item:hover,
QTreeWidget::branch:hover {
	background-color: #3C444E;
	padding-left: 0px;
}

QTreeWidget::item:selected,
QTreeWidget::branch:selected {
	background-color: #17793b;
	padding-left: 0px;
}

/* === FOLDER ICONS ===
 * Icons left of the folder name, used for showing opened and closed folders
 */

QTreeView::branch:has-children:open {
	border-image: url("resources:open_branch.png") 0;
}

QTreeView::branch:has-children:closed {
	border-image: url("resources:closed_branch.png") 0;
}

/* === SUBWINDOWS ===
 * Subwindows in LMMS are editors, the mixer, notes, and the controller rack.
 */
QMdiArea {
	background-color: #111314;
}

/* === BROWSER CHECKBOXES ===
 * You can find these next to "User content", "Factory content" and "Hidden content".
 */
lmms--gui--FileBrowser QCheckBox
{
	font-size: 8pt;
	color: white;
}

/* === KNOBS ===
 * Any and all knobs in the program.
 * Examples can be found on instrument and sample tracks, as volume and panning knobs,
 * as well as on the mixer, instrument and sample effects.
 */
lmms--gui--Knob {

	/*
	 * Examples of inactive knobs include effect decay and effect gate knobs.
	 *
	 * The line refers to the line inside the knob.
	 * The arc is the arc around the knob.
	 */
	qproperty-lineInactiveColor: rgb(120, 120, 120);
	qproperty-arcInactiveColor: rgba(120, 120, 120, 70);

}

/* === AUTOMATION EDITOR === */
lmms--gui--AutomationEditor {

	/*
	 * The color of the text fields to the left of the automation editing space
	 * that display the values of the automated parameter
	 */
	color: #ffffff;

	/*
	 * Colors of the background
	 *
	 * 'background-color' is applied the background of the automation editor.
	 * 'qproperty-backgroundShade' is applied afterwards, to each each even column.
	 */
	background-color: #141616;
	qproperty-backgroundShade: rgba(255, 255, 255, 15);

	/* The color of the nodes */
	qproperty-nodeInValueColor: rgba(103, 73, 194, 150);

	/* The color of the outValues nodes */
	qproperty-nodeOutValueColor: rgba(125, 40, 40, 150);

	/* Color of the tangent line, when they're enabled */
	qproperty-nodeTangentLineColor: rgba(200, 200, 200, 255);

	/* The color of the horizontal and vertical line that follow the cursor */
	qproperty-crossColor: rgba(215, 210, 254, 150);

	/*
	 * Grid colors
	 *
	 * barLineColor applies to the vertical bar lines (at 1, 2, 3, etc).
	 * beatLineColor applies to the vertical beat lines and dotted horizontal lines, for some reason.
	 * lineColor applies to the remaining vertical lines.
	 */
	qproperty-barLineColor: #8173fe;
	qproperty-beatLineColor: #4a3bba;
	qproperty-lineColor: #292929;

	/* The color of the area under the automation curve */
	qproperty-graphColor: rgba(69,42,153,180);

	/* The side section where the values of the automated parameter are */
	qproperty-scaleColor: #262b30;

	/* Ghost notes and ghost samples appear when detuning MIDI editor notes */
	qproperty-ghostNoteColor: rgba(248, 248, 255, 125);

	/* Color of the ghost sample track */
	qproperty-ghostSampleColor: rgba(125, 125, 125, 125);

	/* The note from the MIDI editor being detuned */
	qproperty-detuningNoteColor: rgba(248, 11, 11, 125);

}

/* === TEXT BOX BORDERS
 * E.g. borders around explorer search bars, instrument names and some settings
 */
QLineEdit {
	border-radius: 4px;
	border: 1px;
	background: #101213;
}

/*
 * >line edit
 * >read-only
 * >???
 */
QLineEdit:read-only {
	border-style: none;
	background: transparent;
}

/* Text boxes when they're focused (that is, when they're accepting text) */
QLineEdit:focus {
	border: 1px solid #0bd556;
}

/* === CURRENTLY EDITING TEXT ===
 * This rule is applied to any text when it is being edited,
 * and sets the text color and selection background of said text.
 *
 * E.g:
 * - mixer track names,
 * - sample, instrument and Beat&Bassline track names,
 * - numeric value input when double-clicking on parameters,
 * - instrument names
 * - explorer search bars
 *
 * (Developers, SpinBoxes are used in QInputDialogs.)
 */
QTextEdit, QLineEdit:focus, QComboBox:focus, QSpinBox:focus, QDoubleSpinBox:focus {
	color: #d1d8e4;
	selection-background-color: #17793b;
}

/* === TOOLTIPS ===
 * For the unaware, tooltips are the informative text that appears
 * when you hover over certain buttons, faders, etc.
 *
 * Not all users are gonna see this.
 * It depends on whether or not they've toggled "Enable tooltips" in the settings.
 */
QToolTip {
	border-radius: 4px;
	background: #040506; /* TODO: background-color? */
	color: #d1d8e4;
}

/* === KNOB VALUE BOXES ===
 * Same as the tooltips, but this appears for knobs and shows their values.
 * Preferably, set it to the be the same colors as the tooltip.
 */
lmms--gui--TextFloat, lmms--gui--SimpleTextFloat {
	background: #040506; /* TODO: background-color? */
	color: #d1d8e4;
}

/* === SPLASH SCREEN TEXT === */
QSplashScreen QLabel {
	color: white;
}

/* === TOPBAR MENU ===
 * The menu options in the top-left corner (File, Edit, View, etc).
 */
QMenu {
	border-top: 2px solid #08993E;
	background-color: #15191c;
}

QMenu::separator {
	height: 1.0px;
	background: #323940;
	margin-left: 0x;
	margin-right: 0px;
}

/* A single item in the menu */
QMenu::item {
	color: #d1d8e4;
	padding: 2px 35px 2px 23px;
	margin: 3px 0px 3px 0px;
}

/* The item in the menu you're hovering over */
QMenu::item:selected {
	color: #d1d8e4;
	background-color: #21272b;
}

/* Disabled items (e.g. undo and redo menu options) */
QMenu::item:disabled {
	color: #515459;
	background-color: #262b30;
	padding: 4px 32px 4px 20px;
}

/* The menu item icon (e.g. cog next to "Settings". Usually, you won't touch this. */
QMenu::icon {
	margin: 3px;
}

/* Used for the toggleable menu items, such as "Volume as dBFS" */
QMenu::indicator {
	width: 16;
	height: 16;
	opacity: 0;
	border: 1px solid #101213;
	border-radius: 2px;
	background-color: #101213;
}

/* The toggleable items that are on */
QMenu::indicator:checked {
	image: url("resources:apply.png");
}

/* The toggleable item you're hovering over */
QMenu::indicator:selected {
	image: url("resources:apply-selected.png");
	border: 1px solid #101213;
	background-color: #101213;
}

/* === PLAYHEAD === */
lmms--gui--PositionLine {
	qproperty-tailGradient: true;
	qproperty-lineColor: rgb(255, 255, 255);
}

/* === PIANO ROLL (MIDI EDITOR) ===
 * "Key" refers to the graphical piano key to the left of the piano roll.
 * "Note editor" refers to the right part of the piano roll window, where notes are placed.
 * "Note" refers to the MIDI note in the note editor.
 * "Velocity/panning editor" is the thing at the bottom of the piano roll, with the lollipops.
 */
lmms--gui--PianoRoll {

	/* Used for the background of both the note editor and the velocity/panning editor */
	background-color: #141616;

	/* The background color of the even columns of the note editor */
	qproperty-backgroundShade: rgba(255, 255, 255, 10);

	/* The color of the text left of the velocity/panning editor */
	qproperty-noteModeColor: #0bd556;

	/* Note color; also used for the velocity/panning lollipop heads! */
	qproperty-noteColor: #0bd556;

	qproperty-noteTextColor: #ffffff;

	qproperty-noteOpacity: 165;

	/*
	 * Toggles the borders around notes.
	 * It uses the same color as notes (noteColor), but at the maximum opacity of 255.
	 */
	qproperty-noteBorders: false;

	/* Notes in the MIDI editor made by the Beat&Bassline editor */
	/* TODO: It's called the "Pattern editor" now, right? */
	qproperty-stepNoteColor: #9b1313;

	qproperty-selectedNoteColor: #064d79;

	/*
	 * These apply to the ghost notes.
	 * Same logic as with the regular notes, just follow the names.
	 */
	qproperty-ghostNoteColor: #1e1e1e;
	qproperty-ghostNoteTextColor: #ffffff;
	qproperty-ghostNoteOpacity: 60;
	qproperty-ghostNoteBorders: false;

	/* Color of the velocity/panning lollipop bars */
	qproperty-barColor: #078f3a;

	/* Markings on key lines. Used for marking stuff like scales */
	qproperty-markedSemitoneColor: rgba(255, 255, 255, 30);

	/* The line drawn by the knife-cut tool (from the wrench button dropdown) */
	qproperty-knifeCutLine: rgba(255, 0, 0, 255);

	/* Horizontal width of the white keys */
	qproperty-whiteKeyWidth: 64;

	/*
	 * "Active keys" are the keys of the note
	 * currently being placed into the editor or played back.
	 */

	/* Text color of the active key */
	qproperty-whiteKeyActiveTextColor: #000;

	/* Shadow of the same text as above */
	qproperty-whiteKeyActiveTextShadow: #fff;

	/*
	 * Gradient of the key, when its note is being placed into the editor.
	 *
	 * The gradient is applied to the actual "white space" on the key.
	 * Usually, you'll only want to change the two specified colors.
	 * In the case of all Qt linear gradients,
	 * the color switches from the left color to the right one.
	 *
	 * If you don't want a gradient, just use a regular color!
	 */
	qproperty-whiteKeyActiveBackground: qlineargradient(x1:0, y1:0, x2:1, y2:0, stop:0 #3ac467, stop:1 #3dd671);

	/*
	 * Inactive keys are all the playable keys that aren't the active keys.
	 * The same logic applies as with the active keys, just follow the names.
	 */

	qproperty-whiteKeyInactiveTextColor: #000;
	qproperty-whiteKeyInactiveTextShadow: #fff;
	qproperty-whiteKeyInactiveBackground: qlineargradient(x1:0, y1:0, x2:1, y2:0, stop:0 #d6d6d6, stop:1 #e3e3e3);

	/*
	 * The user can disable certain note ranges,
	 * by dragging the two pivots at the beginning and end of the instrument keyboard,
	 * at the bottom of the instrument.
	 * This rule applies to the keys of those disabled notes.
	 */
	qproperty-whiteKeyDisabledBackground: qlineargradient(x1:0, y1:0, x2:1, y2:0, stop:0 #a0a0a0, stop:1 #b0b0b0);

	/* Same logic as above, just applied to the black keys */
	qproperty-blackKeyWidth: 48;
	qproperty-blackKeyActiveBackground: qlineargradient(x1:0, y1:0, x2:1, y2:0, stop:0 #3ac467, stop:1 #3dd671);
	qproperty-blackKeyInactiveBackground: qlineargradient(x1:0, y1:0, x2:1, y2:0, stop:0 #262626, stop:1 #313131);
	qproperty-blackKeyDisabledBackground: qlineargradient(x1:0, y1:0, x2:1, y2:0, stop:0 #606060, stop:1 #505050);

	/*
	 * Grid colors
	 * barLineColor refers to the vertical bar lines (at 0, 1, 2, 3, etc).
	 * beatLineColor refers to the vertical beat lines and horizontal octave separation lines.
	 * lineColor refers to the horizontal, as well as the remaining vertical lines.
	 */
	qproperty-barLineColor: #42a065;
	qproperty-beatLineColor: #2d6b45;
	qproperty-lineColor: #292929;

	/*
	 * Text on the white piano keys
	 * (TODO: I'm fairly certain these don't do anything, but I'll have to check)
	 */
	qproperty-textColor: #000; /* TODO: Sounds like whiteKeyActiveTextColor */
	qproperty-textColorLight: #0bd556; /* ??? */
	qproperty-textShadow: #fff; /* TODO: Sounds like whiteKeyActiveTextShadow */
}

/* === INSTRUMENT TABS ===
 * Used by all LMMS instrument plugins (TripleOsc, LB302, ZynAddSubFX, etc) when coloring
 * the tabs (Instrument settings, ADSR, note stacking, effects, MIDI and tuning).
 */
lmms--gui--TabWidget {

	/* Background color; Also affects the gradient of the ADSR (from black to this color) */
	background-color: #262b30;

	/* Sub-tab names (e.g. "VOLUME", "CUTOFF" and "RESO" in the ADSR tab) */
	qproperty-tabText: rgba(255, 255, 255, 180);

	/* Pretty much only the "TARGET" text in the ADSR tab */
	qproperty-tabTitleText: #fff;

	/* Background of the selected tab and sub-tab buttons */
	qproperty-tabSelected: #1c4933;

	/* Sub-tab text color (e.g. "VOLUME", "CUTOFF" and "RESO") */
	qproperty-tabTextSelected: rgba(255, 255, 255, 255);

	/* Background color of the tab and sub-tab strips */
	qproperty-tabBackground: #181b1f;

	/* Tab and sub-tab border colors */
	qproperty-tabBorder: #181b1f;

}

/* === GROUP BOXES ===
 * Examples of group boxes include:
 * - The effect chain
 * - The filter, stacking, arpeggio, MIDI and tuning boxes in the instrument settings
 */
lmms--gui--GroupBox {
	background-color: #262b30;
}

/* === TOOLBAR OSCILLOSCOPE ===
 * The waveform display at the top of the LMMS UI
 */
/* TODO: "main toolbar oscilloscope - can have transparent bg now" can it really? */
lmms--gui--Oscilloscope {

	background: none; /* TODO: This doesn't do anything??? */
	border: none; /* TODO: This doesn't do anything??? */

	/*
	 * The color of the channels in the general case, and if they're clipping.
	 * If you care about making the oscilloscope "stereo-friendly",
	 * use different colors for the left and right channels.
	 */
	qproperty-leftChannelColor: rgb(71, 253, 133);
	qproperty-rightChannelColor: rgb(238, 253, 71);
	qproperty-otherChannelsColor: rgb(71, 235, 253);
	qproperty-clippingColor: rgb(255, 64, 64);

}

/* === CPU LOAD ===
 * Located under the oscilloscope.
 * Here, you'll probably just change the PNG, not this CSS part.
 */
 /* TODO: "main toolbar cpu load widget - this can have transparent bg now" how? */
lmms--gui--CPULoadWidget {
	border: none;
	background: url("resources:cpuload_bg.png");
	qproperty-stepSize: 1;
}

/* === SCROLLBARS ===
 * The border-top and border-left rules are used to visibly separate the scrollbar from the parent.
 * You'll probably just be changing the background and border colors.
 */
QScrollBar:horizontal {
	border-top: 3px solid #262b30;
	background: #262b30;
	height: 12px;
	margin: 0px 12px;
}
QScrollBar:vertical {
	border-left: 3px solid #262b30;
	background: #262b30;
	width: 12px;
	margin: 12px 0px;
}

/*
 * Changes the background color of the scrollbars in subwindows
 * "Isn't that just the background property of the two rules above?"
 * Yes. Don't touch this.
 */
QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal,
QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {
	background: none;
}

QScrollBar::add-page:horizontal:pressed, QScrollBar::sub-page:horizontal:pressed,
QScrollBar::add-page:vertical:pressed, QScrollBar::sub-page:vertical:pressed {
	background: rgba(0,0,0,50);
}

/* === SCROLLBAR SLIDERS ===
 * There are unique sliders for horizontal and vertical sliders.
 * Of course, if you want them to be identical, combine them, much like:
 * QScrollBar::handle:horizontal, QScrollBar::handle:vertical { ... }
 */
QScrollBar::handle:horizontal {

	/* Color of the slider */
	background: #5d6b77;

	/* The slider border, ie. 1px solid #444 */
	border: none;

	/* Setting this to 0px makes the slider a rectangle */
	border-radius: 4px;

	/* The slider's minimum width */
	min-width: 24px;
}

/* The color of the slider when you hover over it */
QScrollBar::handle:horizontal:hover {
	background: #b8c4d1;
}
/* The color of the slider when you, who would've guessted, press it */
QScrollBar::handle:horizontal:pressed {
	background: #ffffff;
}

/*
 * Same logic as above, just for the vertical slider
 * Again, if you wanna use the same colors and everything,
 * just follow what the section header says.
 */
QScrollBar::handle:vertical {
	background: #5d6b77;
	border: none;
	border-radius: 4px;
	min-height: 24px;
}

QScrollBar::handle:vertical:hover {
	background: #b8c4d1;
}

QScrollBar::handle:vertical:pressed {
	background: #ffffff;
}

/* TODO: No idea how this works */
QScrollBar::handle:horizontal:disabled, QScrollBar::handle:vertical:disabled  {
	background: #262b30;
	border-radius: 1px;
	border: none;
}

/*
 * If there are too few effects for the scrollbar to be needed, it is disabled.
 * The rules are the same as for the previously defined sliders.
 */
lmms--gui--EffectRackView QScrollBar::handle:vertical:disabled  {
	background: #3f4750;
	border: none;
	border-radius: 4px;
}

/* === SCROLLBAR ARROW BUTTONS ===
 * Buttons at the edge of the scrollbar
 */
QScrollBar::add-line, QScrollBar::sub-line {
	background: #262b30;
	border-radius: 0px;
	border: none;
	subcontrol-origin: margin;
}

/*
 * These control the button width and position.
 * I doubt you'll touch this, but
 * if you wanna change the width or background of the buttons, change it here,
 */
QScrollBar::add-line:horizontal 	{  	subcontrol-position: right; width: 12px;}
QScrollBar::sub-line:horizontal 	{ 	subcontrol-position: left; width: 12px;}
QScrollBar::add-line:vertical 		{ 	subcontrol-position: bottom; height: 12px;}
QScrollBar::sub-line:vertical 		{ 	subcontrol-position: top; height: 12px;}

/*
 * These are reserved for when you hover and click on the buttons,
 * as well as when they're disabled.
 * You'll notice they're all set to the same color by default.
 */

QScrollBar::add-line:hover, QScrollBar::sub-line:hover {
	background: #262b30;
}

QScrollBar::add-line:pressed, QScrollBar::sub-line:pressed {
	background: #262b30;
}

QScrollBar::add-line:disabled, QScrollBar::sub-line:disabled {
	background: #262b30;
}

/* The arrows (little triangles, that is) in the buttons */

QScrollBar::left-arrow:horizontal, QScrollBar::right-arrow:horizontal,
QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical {
	border: none;
	background-color: none;
	width: 5px;
	height: 5px;
}

QScrollBar::left-arrow:horizontal, QScrollBar::right-arrow:horizontal {
	margin-top: 3px;
}

QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical {
	margin-left: 3px;
}

/*
 * Relative paths for the images of the arrows
 * As a suggestion, don't touch this. Just change the images to suit your needs.
 */

QScrollBar::left-arrow:horizontal { background-image: url("resources:sbarrow_left.png");}
QScrollBar::right-arrow:horizontal { background-image: url("resources:sbarrow_right.png");}
QScrollBar::up-arrow:vertical { background-image: url("resources:sbarrow_up.png");}
QScrollBar::down-arrow:vertical { background-image: url("resources:sbarrow_down.png");}
QScrollBar::left-arrow:horizontal:disabled { background-image: url("resources:sbarrow_left_d.png");}
QScrollBar::right-arrow:horizontal:disabled { background-image: url("resources:sbarrow_right_d.png");}
QScrollBar::up-arrow:vertical:disabled { background-image: url("resources:sbarrow_up_d.png");}
QScrollBar::down-arrow:vertical:disabled { background-image: url("resources:sbarrow_down_d.png");}
lmms--gui--EffectRackView QScrollBar::up-arrow:vertical:disabled { background-image: url("resources:sbarrow_up.png");}
lmms--gui--EffectRackView QScrollBar::down-arrow:vertical:disabled { background-image: url("resources:sbarrow_down.png");}

/* Background color of the Song- and Pattern Editor */
lmms--gui--TrackContainerView QFrame {
	background-color: #262b30;
}

/*
 * Background color of the track controls
 * (ie. the leftmost part of the track, where the track name and properties are)
 */
lmms--gui--TrackView > QWidget {
	background-color: #3B424A;
}

/* TODO: autoscroll, loop, stop behaviour toggle buttons */

/* === TRACK CONTENT SPACE ===
 * The space right of the track controls,
 * where all the MIDI, pattern, sample and automation clips are.
 */
lmms--gui--TrackContentWidget {

	/* Colors of the alternating beats */
	qproperty-darkerColor: #0C0E0F;
	qproperty-lighterColor: #14151A;

	/* Separates each beats */
	qproperty-coarseGridColor: #3C444C;

	/* Separates each fine distance by quantization (1/2, 1/4 bar, etc) */
	qproperty-fineGridColor: #262B30;

	/* Separates tracks */
	qproperty-horizontalColor: #3C444C;

	/* TODO: No idea */
	qproperty-embossColor: rgba(0, 0, 0, 0);

	/* Separator line widths */
	qproperty-coarseGridWidth: 2px;
	qproperty-fineGridWidth: 1px;
	qproperty-horizontalWidth: 1px;
	qproperty-embossWidth: 0px;

	/* positive offset shifts emboss to the right (TODO: ??? also, 0px) */
	qproperty-embossOffset: 0;

}

/* === TRACK OPERATIONS (THE GEAR BUTTON IN TRCAK CONTROLS) ===
 * I don't believe you have any use from changing these three rulesets, code wise.
 */

lmms--gui--TrackOperationsWidget > QPushButton {
	max-height: 26px;
	max-width: 26px;
	min-height: 26px;
	min-width: 26px;
	background: none;
	border: none;
}

lmms--gui--TrackOperationsWidget > QPushButton::menu-indicator {
	image: url("resources:trackop.png");
	subcontrol-origin: padding;
	subcontrol-position: center;
	position: relative;
	top: 1px;
}

lmms--gui--TrackOperationsWidget > QPushButton::menu-indicator:pressed,
lmms--gui--TrackOperationsWidget > QPushButton::menu-indicator:checked {
	image: url("resources:trackop.png");
	position: relative;
	top: 2px;
}

/* === FONT SIZES ===
 * Currently used only for SF2Player
 */

/* The text in the boxes next to "FILE" and "PATCH" */
lmms--gui--Sf2InstrumentView > QLabel {
	font-size:10px;
}

/* === TODO BELOW === */

/* === MAIN TOOLBAR SLIDERS ===
 * This covers:
 * - the master volume vertical slider,
 * - the transposition vertical slider and
 * - the zoom slider (TODO: Zoom isn't even on the toolbar???)
 * The groove refers to the long vertical line the handle moves in.
 * The handle refers to the sliding element in the slider.
 */
lmms--gui--AutomatableSlider::groove:vertical {
	background: #040506;
	border: none;
	border-radius: 2px;
	width: 2px;
	margin: 2px 2px;
}

lmms--gui--AutomatableSlider::handle:vertical {
	background: none;
	border-image: url("resources:main_slider.png");
	width: 26px;
	height: 10px;
	border-radius: 2px;
	margin: -4px -12px -2px;
}

/* main horizontal sliders (zoom) */

lmms--gui--AutomatableSlider::groove:horizontal {
	background: #040506;
	border: none;
	border-radius: 2px;
	height: 2px;
	margin: 2px;
}

lmms--gui--AutomatableSlider::handle:horizontal {
	background: none;
	border-image: url("resources:horizontal_slider.png");
	width: 10px;
	height: 26px;
	border-radius: 2px;
	margin: -12px -2px;
}

/* window that shows up when you add effects */

lmms--gui--EffectSelectDialog QScrollArea {
	background: #262b30;
}

lmms--gui--SetupDialog QScrollArea {
	border: 0px;
}

/* the inner boxes in LADSPA effect windows */

lmms--gui--EffectControlDialog QGroupBox {
	background: #262b30;
	margin-top: 1ex;
	padding: 10px 2px 1px;
	border-radius: 4px;
	border: none;
}

/* the inner box titles when present (channel 1, channel 2...) */

lmms--gui--EffectControlDialog QGroupBox::title {
	subcontrol-origin: margin;
	subcontrol-position: top center;
	background: #262b30;
	color: #d1d8e4;
	border-radius: 2px;
	border: none;
	padding: 2px 1px;
}

/* main toolbar */

QWidget#mainToolbar {
	background: qlineargradient(spread:reflect, x1:0, y1:0, x2:0, y2:1, stop:0 #373f47, stop:1 #1d2122);
}

/* smaller toolbars */

QToolBar {
	background: qlineargradient(spread:reflect, x1:0, y1:0, x2:0, y2:1, stop:0 #434b57, stop:1 #22252c);
	border: none;
	padding: 2px;
	spacing: 0;
}

QToolBar::separator {
	border: none;
	width: 5px;
}

/* all tool buttons */

QToolButton, QToolButton::menu-button {
	margin: 1px;
	padding: 2px 2px 2px 2px;
	border-top: 1px solid #778394;
	border-bottom: 1px solid #1e2226;
	border-radius: 2px;
	background: qlineargradient(spread:reflect, x1:0, y1:0, x2:0, y2:1 stop:0 #636c7a, stop:1 #343840);
	font-size:10px;
	color: #fff;
}

QToolButton:hover {
	border-top: 1px solid #909eb3;
	border-bottom: 1px solid #1e2226;
	border-radius: 2px;
	background: qlineargradient(spread:reflect, x1:0, y1:0, x2:0, y2:1, stop:0 #7c8799, stop:1 #343840)
}

QToolButton:hover:checked {
	border: 2px solid #343840;
	border-radius: 2px;
	background: qlineargradient(spread:reflect, x1:0, y1:0, x2:0, y2:1, stop:0 #292d33, stop:1 #22262c)
}

QToolButton:pressed {
	border-top: 1px solid #778394;
	border-bottom: 1px solid #1e2226;
	border-radius: 2px;
	background: qlineargradient(spread:reflect, x1:0, y1:0, x2:0, y2:1, stop:0 #636c7a, stop:1 #262b30);
}

QToolButton:checked {
	border-top: 1px solid #1b1f22;
	border-bottom: 1px solid #4a515e;
	background: qlineargradient(spread:reflect, x1:0, y1:0, x2:0, y2:1, stop:0 #1b1f22, stop:1 #13161a);
	background-image: url("resources:shadow_p.png");
}

/* buttons with combined menu */

QToolButton[popupMode="1"] {
	margin-right: 13px;
	border-top-right-radius: 0;
	border-bottom-right-radius: 0;
}

QToolButton::menu-button {
	subcontrol-origin: margin;
	width: 13px;
	padding: 0;
	border-top-left-radius: 0;
	border-bottom-left-radius: 0;
}

/* track label buttons - the part that contains the icon and track title */

lmms--gui--TrackLabelButton {
	background-color: #3B424A;
	border: 1px solid #3B424A;
	font-size: 11px;
	font-weight: normal;
	padding: 2px 1px;
}

lmms--gui--TrackLabelButton:hover {
	background: #3B424A;
	border: 1px solid #515B66;
	border-radius: none;
	font-size: 11px;
	font-weight: normal;
	padding: 2px 1px;
}

lmms--gui--TrackLabelButton:pressed {
	background: #262B30;
	border-radius: none;
	font-size: 11px;
	font-weight: normal;
	padding: 2px 1px;
}

lmms--gui--TrackLabelButton:checked {
	border: 1px solid #485059;
	background: #1C1F24;
	background-image: url("resources:track_shadow_p.png");
	border-radius: none;
	font-size: 11px;
	font-weight: normal;
	padding: 2px 1px;
}

lmms--gui--TrackLabelButton:checked:pressed {
	border: 1px solid #2f353b;
	background: #0e1012;
	background-image: url("resources:track_shadow_p.png");
	font-size: 11px;
	padding: 2px 1px;
	font-weight: solid;
}

/* sidebar, sidebar buttons */

lmms--gui--SideBar {
	subcontrol-position: center;
	background: qlineargradient(spread:reflect, x1:0, y1:0, x2:0, y2:1, stop:0 #1D2122,  stop:1 #262B30);
}

lmms--gui--SideBar QToolButton {
	background: none;
	border: none;
	font-size: 12px;
}

lmms--gui--SideBar QToolButton:hover {
	background: none;
	border: none;
	font-size: 12px;
}

lmms--gui--SideBar QToolButton:pressed {
	background: none;
	border: none;
	font-size: 12px;
}

lmms--gui--SideBar QToolButton:checked {
	background: qlineargradient(spread:reflect, x1:0, y1:0, x2:0, y2:1, stop:0 #4b525b, stop:1 #2f333a);
	border: none;
	font-size: 12px;
}

/* Instrument plugin list */

lmms--gui--PluginDescWidget {
	border-top: 1px solid #3E474F;
	border-bottom: 1px solid #101314;
	border-radius: 2px;
	background-color: qlineargradient(spread:reflect, x1:0, y1:0, x2:0, y2:1, stop:0 #2E343B, stop:1 #1E2326);
	color: #d1d8e4;
	font-weight: bold;
	margin: 0px;
}

lmms--gui--PluginDescWidget:hover {
	background: qlineargradient(spread:reflect, x1:0, y1:0, x2:0, y2:1, stop:0 #7C8799, stop:1 #343840);
	color: #d1d8e4;
}

/* piano widget */

lmms--gui--PianoView {
	background-color: #14171a;
}

/* font sizes for text buttons */

lmms--gui--MixerView QPushButton,
lmms--gui--EffectRackView QPushButton,
lmms--gui--ControllerRackView QPushButton {
	font-size: 10px;
}

lmms--gui--MixerChannelView {
	background: #14161A;
	color: #d1d8e4;
	qproperty-backgroundActive: #3B424A;
	qproperty-strokeOuterActive: #262B30;
	qproperty-strokeOuterInactive: #262B30;
	qproperty-strokeInnerActive: #0C0D0F;
	qproperty-strokeInnerInactive: #0C0D0F;
}

lmms--gui--MixerChannelView QGraphicsView {
	background: transparent;
	border-style: none;
}

lmms--gui--PeakIndicator {
	background-color: #111811;
	font-size: 7pt;
}

/* persistent peak markers for fx peak meters */
lmms--gui--Fader {
	qproperty-peakOk: #0ad45c;
	qproperty-peakWarn: #d6ec52;
	qproperty-peakClip: #c12038;
}

lmms--gui--TimeLineWidget {
	/* font-size only supports px and pt. */
	font-size: 7pt;
	/* lengths also support em. This will make sure that the height
	   will always change in the same proportion as the font size
	   defined above.
	   If you want a fixed size set min and max to the same value. */
	min-height: 1.5em;
	max-height: 1.5em;

	/* Properties for the loop indicator rectangle in inactive state:
	    - LoopColor: Color of the outermost border
	    - LoopBrush: Brush to paint the main portion of the rectangle
	    - LoopInnerColor: Color used to paint the inlayed border
	    - LoopHandleColor: Color used to paint loop marker handles */
	qproperty-inactiveLoopColor: #3B424A;
	qproperty-inactiveLoopBrush: #3B424A;
	qproperty-inactiveLoopInnerColor: #3B424A;
	qproperty-inactiveLoopHandleColor: rgba( 192, 192, 192, 100 );

	/* Properties for the loop indicator rectangle in active state.
	   See above for detailed description. */
	qproperty-activeLoopColor: #21A14F;
	qproperty-activeLoopBrush: #21A14F;
	qproperty-activeLoopInnerColor: #21A14F;
	qproperty-activeLoopHandleColor: rgba( 192, 192, 192, 200 );

	/* Vertical padding for the loop indicator rectangle.
	   A value of zero draws the rectangle at the full height of the widget. */
	qproperty-loopRectangleVerticalPadding: 1;
	/* Width of loop marker handles (when handle mode is active) */
	qproperty-loopHandleWidth: 8;

	qproperty-barLineColor: rgb( 192, 192, 192 );
	qproperty-barNumberColor: rgb( 192, 192, 192 );

	/* Cursor hotspots for loop marker adjustment */
	qproperty-mouseHotspotSelLeft: 0px 16px;
	qproperty-mouseHotspotSelRight: 32px 16px;
}

lmms--gui--TrackContainerView QLabel
{
	background: none;
}

/* Clips */

/* common clip colors */
lmms--gui--ClipView   {
	qproperty-mutedColor: rgba(255,255,255,100);
	qproperty-mutedBackgroundColor: #373d48;
	qproperty-selectedColor: #006B65;
	qproperty-patternClipBackground: #373d48;
	qproperty-textColor: #fff;
	qproperty-textBackgroundColor: rgba(0, 0, 0, 75);
	qproperty-textShadowColor: rgba(0,0,0,200);
	qproperty-gradient: false; /* boolean property, set true to have a gradient */
	/* finger tip offset of cursor */
	qproperty-mouseHotspotHand: 7px 2px;
	qproperty-mouseHotspotKnife: 0px 0px;

	font-size: 11px;
}

/* MIDI (instrument) clip */
lmms--gui--MidiClipView {
	background-color: #21A14F;
	color: rgba(255,255,255,220);

	qproperty-noteFillColor: rgba(255, 255, 255, 220);
	qproperty-noteBorderColor: rgb(33, 161, 79);
	qproperty-mutedNoteFillColor: rgba(100, 100, 100, 220);
	qproperty-mutedNoteBorderColor: rgb(55, 61, 72);
}

/* sample track clip */
lmms--gui--SampleClipView {
	background-color: rgba(42,51,59,255);
	color: #FF8F05;
}

/* automation clip */
lmms--gui--AutomationClipView {
	background-color: #663DE1;
	color: rgba(255,255,255,90);
}

/* pattern clip */
lmms--gui--PatternClipView {
	background-color: #20BDB2; /* default colour for pattern tracks */
}

/* Subwindows in MDI-Area */
lmms--gui--SubWindow {
	color: qlineargradient(spread:reflect, x1:0, y1:0, x2:0, y2:1, stop:0 #090909, stop:0.05 #3D454F, stop:1 #262B30);
	qproperty-activeColor: qlineargradient(spread:reflect, x1:0, y1:0, x2:0, y2:1 stop:0 #090909, stop:0.05 #636c7a, stop:1 #343840);
	qproperty-textShadowColor: #000;
	qproperty-borderColor: #5c6b7a;
}

/* Subwindow title text */
lmms--gui--SubWindow > QLabel {
	color: #d1d8e4;
	font-size: 12px;
	font-style: normal;
}

/* SubWindow titlebar button */
lmms--gui--SubWindow > QPushButton {
	background-color: rgba( 255, 255, 255, 0% );
	border-width: 0px;
	border-color: none;
	border-style: none;
}

lmms--gui--SubWindow > QPushButton:hover{
	background-color: rgba( 255, 255, 255, 15% );
	border-width: 1px;
	border-color: rgba( 0, 0, 0, 20% );
	border-style: solid;
	border-radius: 2px;
}


/* Plugins */

lmms--gui--TripleOscillatorView lmms--gui--Knob {
	color: rgb(255,255,255);
	qproperty-outerColor: rgb(255,255,255);
	qproperty-innerRadius: 2;
	qproperty-outerRadius: 7;
	qproperty-centerPointX: 13.0;
	qproperty-centerPointY: 14.0;
	qproperty-lineWidth: 2;
}


lmms--gui--KickerInstrumentView lmms--gui--Knob#smallKnob {
	color: #595959;
	qproperty-outerColor: black;
	qproperty-innerRadius: 3;
	qproperty-outerRadius: 11.0;
	qproperty-centerPointX: 14.5;
	qproperty-centerPointY: 14.5;
	qproperty-lineWidth: 2;
}


lmms--gui--KickerInstrumentView lmms--gui--Knob#largeKnob {
	color: #0c3b89;
	qproperty-outerColor: #519fff;
	qproperty-innerRadius: 12.0;
	qproperty-outerRadius: 14.5;
	qproperty-centerPointX: 17.0;
	qproperty-centerPointY: 17.0;
	qproperty-lineWidth: 3;
}


lmms--gui--AudioFileProcessorView lmms--gui--Knob {
	color: rgb(240, 147, 14);
	qproperty-outerColor: rgb(30, 35, 37);
	qproperty-innerRadius: 4;
	qproperty-outerRadius: 11.2;
	qproperty-centerPointX: 18.5;
	qproperty-centerPointY: 16.5;
	qproperty-lineWidth: 3;
}

lmms--gui--OrganicInstrumentView lmms--gui--Knob {
	color: rgb(124, 207, 98);
	qproperty-outerColor: rgb(13, 42, 4);
	qproperty-innerRadius: 2;
	qproperty-outerRadius: 7.5;
	qproperty-centerPointX: 10.5;
	qproperty-centerPointY: 10.5;
	qproperty-lineWidth: 1.5;
}

lmms--gui--OrganicInstrumentView lmms--gui--Knob#harmKnob {
	color: rgb(205, 98, 216);
	qproperty-outerColor: rgb(18, 4, 18);
}

lmms--gui--OrganicInstrumentView lmms--gui--Knob#fx1Knob,
lmms--gui--OrganicInstrumentView lmms--gui--Knob#volKnob {
	color: rgb(157, 157, 157);
	qproperty-outerColor: rgb(37, 37, 37);
	qproperty-innerRadius: 4;
	qproperty-outerRadius: 10.0;
	qproperty-centerPointX: 18.5;
	qproperty-centerPointY: 13.8;
	qproperty-lineWidth: 2;
}

lmms--gui--Sf2InstrumentView lmms--gui--Knob {
	color: #ff00ea;
	qproperty-outerColor: rgb(20, 5, 18);
	qproperty-innerRadius: 2;
	qproperty-outerRadius: 9.2;
	qproperty-centerPointX: 15.5;
	qproperty-centerPointY: 15.42;
	qproperty-lineWidth: 2;
}

lmms--gui--SfxrInstrumentView lmms--gui--Knob {
	color: #000;
	qproperty-outerColor: rgb(194, 177, 145);
	qproperty-innerRadius: 2;
	qproperty-outerRadius: 9;
	qproperty-lineWidth: 2;
}

lmms--gui--SfxrInstrumentView lmms--gui--Knob#envKnob {
	color:	#263352;
	qproperty-outerColor: #4b66a4;
}

lmms--gui--SfxrInstrumentView lmms--gui--Knob#freqKnob {
	color:	#1e4a22;
	qproperty-outerColor: #3c9544;
}

lmms--gui--SfxrInstrumentView lmms--gui--Knob#changeKnob {
	color:	#591c1c;
	qproperty-outerColor: #b23737;
}

lmms--gui--SfxrInstrumentView lmms--gui--Knob#sqrKnob {
	color:	#3b2714;
	qproperty-outerColor: #724c27;
}

lmms--gui--SfxrInstrumentView lmms--gui--Knob#repeatKnob {
	color:	#292929;
	qproperty-outerColor: #515151;
}

lmms--gui--SfxrInstrumentView lmms--gui--Knob#phaserKnob {
	color:	#144c4d;
	qproperty-outerColor: #299899;
}

lmms--gui--SfxrInstrumentView lmms--gui--Knob#filterKnob {
	color:	#47224c;
	qproperty-outerColor: #8e4397;
}

lmms--gui--OpulenzInstrumentView lmms--gui--Knob {
	color: rgb(128,128,128);
	qproperty-outerColor: rgb(255,255,255);
	qproperty-innerRadius: 2;
	qproperty-outerRadius: 9;
	qproperty-lineWidth: 2;
}

lmms--gui--SidInstrumentView lmms--gui--Knob {
	color: rgb(113,95,80);
	qproperty-outerColor: rgb( 255,255,255 );
	qproperty-innerRadius: 2;
	qproperty-outerRadius: 7;
	qproperty-lineWidth: 2;
}

lmms--gui--SlicerTView lmms--gui--Knob {
	color: rgb(162, 128, 226);
	qproperty-outerColor: rgb( 162, 128, 226 );
	qproperty-innerRadius: 1;
	qproperty-outerRadius: 11;
	qproperty-lineWidth: 3;
}

lmms--gui--WatsynView lmms--gui--Knob {
	qproperty-innerRadius: 1;
	qproperty-outerRadius: 7;
	qproperty-centerPointX: 9.5;
	qproperty-centerPointY: 9.5;
	qproperty-lineWidth: 2;
}

lmms--gui--WatsynView lmms--gui--Knob#aKnob {
	color: #43b2ff;
	qproperty-outerColor: #43b2ff;
}

lmms--gui--WatsynView lmms--gui--Knob#bKnob {
	color: #fc5431;
	qproperty-outerColor: #fc5431;
}

lmms--gui--WatsynView lmms--gui--Knob#mixKnob {
	color: #43ff82;
	qproperty-outerColor: #43ff82;
	qproperty-outerRadius: 13;
	qproperty-centerPointX: 15.5;
	qproperty-centerPointY: 15.5;
}

lmms--gui--WatsynView lmms--gui--Knob#mixenvKnob {
	color: #43ff82;
	qproperty-outerColor: #43ff82;
}

lmms--gui--WatsynView lmms--gui--Knob#xtalkKnob {
	color: #fb50fb;
	qproperty-outerColor: #fb50fb;
}

lmms--gui--MonstroView lmms--gui--Knob {
	color: #ffffff;
	qproperty-outerColor: #aaaaaa;
	qproperty-outerRadius: 9;
	qproperty-innerRadius: 6;
	qproperty-centerPointX: 10;
	qproperty-centerPointY: 10;
	qproperty-lineWidth: 2.5;
}

lmms--gui--NesInstrumentView lmms--gui--Knob {
	color: #e7231b;
	qproperty-outerColor: #fff;
	qproperty-outerRadius: 11.0;
	qproperty-innerRadius: 8.0;
	qproperty-centerPointX: 14.5;
	qproperty-centerPointY: 14.5;
	qproperty-lineWidth: 2;
}

lmms--gui--CompressorControlDialog {
	qproperty-inVolAreaColor: rgba(209, 216, 228, 17);
	qproperty-inVolColor: rgba(209, 216, 228, 100);
	qproperty-outVolAreaColor: rgba(209, 216, 228, 30);
	qproperty-outVolColor: rgba(209, 216, 228, 240);
	qproperty-gainReductionColor: rgba(180, 100, 100, 210);
	qproperty-kneeColor: rgba(39, 171, 95, 255);
	qproperty-kneeColor2: rgba(9, 171, 160, 255);
	qproperty-threshColor: rgba(39, 171, 95, 100);
	qproperty-textColor: rgba(209, 216, 228, 50);
	qproperty-graphColor: rgba(209, 216, 228, 50);
	qproperty-resetColor: rgba(200, 100, 15, 200);
	qproperty-backgroundColor: rgba(7, 8, 9, 255);
}

lmms--gui--CompressorControlDialog lmms--gui--Knob {
	color: #2fcc71;
	qproperty-outerColor: #2fcc71;
	qproperty-lineWidth: 2;
}

lmms--gui--BarModelEditor {
	qproperty-backgroundBrush: rgba(28, 73, 51, 255);
	qproperty-barBrush: rgba(17, 136, 71, 255);
}

/* palette information  */

lmms--gui--LmmsPalette {
	qproperty-background: #262b30;
	qproperty-windowText: #1de276;
	qproperty-base: #101213;
	qproperty-text: #d1d8e4;
	qproperty-button: #3f4750;
	qproperty-shadow: rgb(0,0,0);
	qproperty-buttonText: #d1d8e4;
	qproperty-brightText: #d1d8e4;
	qproperty-highlight: #262b30;
	qproperty-highlightedText: #d1d8e4;
}
